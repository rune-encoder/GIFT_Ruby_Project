// Summary: This contains styles used with any item that is being "viewed", "updated", or "created" 
// It has the styles for the container, details container, row, cell, group, label, value, and buttons.
// Used currently in `ProductView.jsx` and `PrductControl.jsx`.

// ==============================
// CONTROLLER: CONTAINER
// ==============================
// Container for selected item's overview (or item being created).
// Contains sections used to view, update, or create a item.
// Applies flex column layout.
.control-item {
  @include apply-font-family("roboto-condensed");
  @include apply-flex(column);

  flex: 1; // Expand to fill the remaining space.
}

// ==============================
// CONTROLLER: DETAILS CONTAINER
// ==============================
// Container for details, actions, and other information for the selected item (or item being created).
// Contains sections used to display data or fields to update data or create a new item.
// Applies flex column layout.
.control__item-details {
  @include apply-flex(column, center);

  flex-grow: 1; // Expand to fill the remaining space.
}

// ==============================
// CONTROLLER: ROW (INDIVIDUAL)
// ==============================
// Usage: Used to create a row layout for the data viewed or being inputted.
// Applies specing and background color to the row.
// Important: Ensure the use of existing --(modifier) to expand the styles for the specific item.
// Example: .control__item-row--flex-row: Applies flex row layout to the row.
[class^="control__item-row"] {
  @include apply-space("padding", -5, "y");
  @include apply-space("padding", 0, "x");

  background-color: var(--shade-1);

  &:nth-child(odd) {
    background-color: var(--shade-2);
  }

  // Mobile Mode: Apply opacity to the background color of the row.
  @include respond-to("md") {
    background-color: var(--opacity-shade-1);

    &:nth-child(odd) {
      background-color: var(--opacity-shade-2);
    }
  }
}

// Expands on the syles from the `.control__item-row` attribute selector.
.control__item-row {
  // Modifier: Applies flex row layout to the row.
  &--flex-row {
    @include apply-flex(row, start, center);
    @include apply-space("gap", -5);
  }

  // Modifier: Applies flex row layout to the row with the items aligned to the end.
  &--flex-row-end {
    @include apply-flex(row, end, center);
    @include apply-space("gap", -5);
  }

  // Modifier: Applies grid layout to the row.
  &--grid {
    display: grid;
    grid-template-columns: 50% 50%;
  }

  // Modifier: Applies flex column layout to the row.
  &--flex-col {
    @include apply-flex(column, center, start);

    // If there is a <p> tag in this row with an internal column layout, apply padding to the left (for indentation).
    p {
      @include apply-space("padding-left", 0);
    }
  }
}

// ==============================
// CONTROLLER: CELLS (INDIVIDUAL)
// ==============================
// Useage: Used to specify a (individual) cell in a row.
// Use with the `.control__item-row--grid` class to specify the cells in the row grid layout.
// Applies spacing to the cell.
.control__item-cell {
  @include apply-space("padding", 0, "x");

  width: 100%;
}

// Usage: Used with the `.control__item-cell` to group related items in a cell.
// You may use multiple groups in a cell to stack them on top of other groups
// Applys spacing between related items within the group in the cell.
// Example: "Price" and "Number".
.control__item-group {
  @include apply-flex(row, space-between, center);
  @include apply-space("padding", -10, "y");
}

// ==============================
// CONTROLLER: UTILITIES
// ==============================
// Used to specify a label for a specific item being viewed, created, or modified.
// Applies style, layout, typography, and spacing to the label.
.control__item-label {
  @include apply-flex(row, start, center);
  @include apply-space("gap", -15);
  @include set-typography("medium", 1, $base-line-height);

  color: var(--shade-13);

  // Mobile Mode: When background changes to transparent in mobile mode, lighten the font color for better visibility.
  @include respond-to("md") {
    color: var(--shade-22);
  }
}

// Used to specify a value for a specific item being viewed, created, or modified.
// Applies typography settings to the value (font-size, line-height, and font-weight).
// Important: Ensure the use of --(modifier) to expand the styles for the specific item.
[class^="control__item-value"] {
  @include set-typography("medium", 1, $base-line-height);
}

// Expands on the syles from the `.control__item-value` attribute selector.
.control__item-value {
  // If there is no value, display in red. Example: "Category": "None Selected".
  &--danger {
    color: var(--err-btn-light);
  }
}

// Used to select icons within the `control__item-value` class.
// Applies layout, font-size, line-height, and color to the icon.
.control__item-value svg {
  @include apply-flex(row, center, center);
  @include set-typography("bold", 2, $base-line-height);

  filter: drop-shadow(0 0 5px var(--shade-1));

  // If the value is a boolean "true" display in green.
  &[data-boolean="true"] {
    color: var(--success);
  }

  // If the value is a boolean "false" display in red.
  &[data-boolean="false"] {
    color: var(--danger);
  }
}

// ==============================
// CONTROLLER: INPUT FIELD STYLES
// ==============================
// Applys styles to the input fields in the control item.
input.control__item-value,
select.control__item-value,
textarea.control__item-value {
  @extend %form-input--style;
}

// Text and Select input field styles.
.control__item-value[type="text"],
select.control__item-value {
  width: 100%;
}

// Number input field styles.
.control__item-value[type="number"] {
  width: 50%;
}

// Checkbox input field styles.
.control__item-value[type="checkbox"] {
  transform: scale(1.5);
}

// Textarea input field styles.
textarea.control__item-value {
  @include apply-font-family("roboto");

  resize: vertical;
  width: 100%;
  min-height: $listings-row-height;
}

// File input field styles.
.choose-file__input {
  @include apply-text-shadow("shade-10");

  width: 50%;
}

// ==============================
// CONTROLLER: BUTTONS
// ==============================
// Button to navigate back to the previous page.
// Applies position, font-size, color, and transition to the button.
.control__btn-back {
  @include apply-glass-effect("opacity-shade-1", 10px);
  @include apply-border("shade-15", 20px);
  @include apply-position(
    fixed,
    $top: calc($header-height + halved-modular-scale(-5)),
    $left: calc($sidebar-width + halved-modular-scale(2))
  );

  font-size: modular-scale(3);
  transition: all 0.3s ease-out;
  color: var(--shade-20);
  z-index: 1;

  &:hover {
    @include apply-border("selection", 20px);

    filter: drop-shadow(0 0 1px var(--shade-13));
    color: var(--selection);
  }

  @include respond-to("md") {
    @include apply-position(
      fixed,
      $top: halved-modular-scale(-5),
      $left: halved-modular-scale(-5)
    );
  }
}

// Button to save the changes made to the item.
.control__btn-action {
  @include apply-space("padding", -10, "y");
  @extend %icon-text__button--layout;
  @extend %icon-text__button--style;

  background-color: var(--save-btn-light);
  border: solid 1px var(--save-btn-dark);
  border-radius: $border-radius-sm;
  width: 100%;
}
